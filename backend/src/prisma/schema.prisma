// backend/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  filePath     String
  uploadedAt   DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // 关联的文档块
  chunks       DocumentChunk[]
  
  @@map("documents")
}

model DocumentChunk {
  id          String  @id @default(cuid())
  documentId  String
  content     String  @db.Text
  chunkIndex  Int
  embedding   Float[] // 向量嵌入
  metadata    Json?   // 额外的元数据
  
  // 关联的文档
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@map("document_chunks")
  @@index([documentId])
}

model Conversation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 关联的消息
  messages  ChatMessage[]
  
  @@map("conversations")
}

model ChatMessage {
  id             String   @id @default(cuid())
  conversationId String
  role           String   // 'user' | 'assistant'
  content        String   @db.Text
  sources        Json?    // 引用的文档块信息
  createdAt      DateTime @default(now())
  
  // 关联的对话
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@map("chat_messages")
  @@index([conversationId])
}